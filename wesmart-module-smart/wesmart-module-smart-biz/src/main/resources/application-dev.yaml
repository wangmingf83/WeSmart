--- #################### 注册中心 + 配置中心相关配置 ####################

spring:
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848 # Nacos 服务器地址
      username: nacos # Nacos 账号
      password: nacos # Nacos 密码
      discovery: # 【配置中心】配置项
        namespace: dev # 命名空间。这里使用 dev 开发环境
        group: DEFAULT_GROUP # 使用的 Nacos 配置分组，默认为 DEFAULT_GROUP
        metadata:
          version: 1.0.0 # 服务实例的版本号，可用于灰度发布
      config: # 【注册中心】配置项
        namespace: dev # 命名空间。这里使用 dev 开发环境
        group: DEFAULT_GROUP # 使用的 Nacos 配置分组，默认为 DEFAULT_GROUP



#logging:
#  level:
#    org.springframework: DEBUG
#    org.springframework.boot: DEBUG
#    org.springframework.context: DEBUG

--- #################### 开发模式 ####################
spring:
  jackson:
    time-zone: GMT+8
#  devtools:
#    restart:
#      enabled: true

--- #################### 数据库相关配置 ####################
spring:
  # 数据源配置项
  autoconfigure:
    exclude:
  datasource:
    druid: # Druid 【监控】相关的全局配置
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        allow: # 设置白名单，不填则允许所有访问
        url-pattern: /druid/*
        login-username: # 控制台管理用户名和密码
        login-password:
      filter:
        stat:
          enabled: true
          log-slow-sql: true # 慢 SQL 记录
          slow-sql-millis: 100
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
    dynamic: # 多数据源配置
      druid: # Druid 【连接池】相关的全局配置
        initial-size: 5 # 初始连接数
        min-idle: 10 # 最小连接池数量
        max-active: 20 # 最大连接池数量
        max-wait: 600000 # 配置获取连接等待超时的时间，单位：毫秒
        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
        min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒
        max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒
        validation-query: SELECT 1 FROM DUAL # 配置检测连接是否有效
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
      primary: master
      datasource:
        master:
          url: jdbc:mysql://192.168.17.9:3306/ruoyi-vue-pro?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&rewriteBatchedStatements=true # MySQL Connector/J 8.X 连接的示例
          username: root
          password: 123456
        slave: # 模拟从库，可根据自己需要修改 # 模拟从库，可根据自己需要修改
          lazy: true # 开启懒加载，保证启动速度
          url: jdbc:mysql://192.168.17.9:3306/ruoyi-vue-pro?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&rewriteBatchedStatements=true # MySQL Connector/J 8.X 连接的示例
          username: root
          password: 123456

--- #################### redis相关配置 ####################
spring:
  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
  data:
    redis:
      host: 192.168.17.9 # 地址
      port: 6379 # 端口
      database: 1 # 数据库索引
      password: 123456 # 密码，建议生产环境开启
  # redis 配置
#  redis:
#    # 地址
#    host: 192.168.17.9
#    # 端口，默认为6379
#    port: 6379
#    database: 5
#    # 密码
#    password: 123456
#    # 连接超时时间
#    timeout: 10s
#    lettuce:
#      pool:
#        # 连接池中的最小空闲连接
#        min-idle: 0
#        # 连接池中的最大空闲连接
#        max-idle: 8
#        # 连接池的最大数据库连接数
#        max-active: 8
#        # #连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-wait: -1ms
#      cluster:
#        refresh:
#          adaptive: true

--- #################### MQ 消息队列相关配置 ####################

--- #################### 定时任务相关配置 ####################

--- #################### rabbitmq相关配置 ####################
spring:
#  jackson:
#    time-zone: GMT+8
  rabbitmq:
    host: 192.168.17.9
    port: 5672
    username: lw
    password: lw
    virtual-host: lwProdVhost
    #publisher-confirm-type: correlated #消息确认机制
    listener:
      simple:
        acknowledge-mode: manual  #手动 ack
        default-requeue-rejected: true
        retry:
          enabled: true
          max-attempts: 3
      direct:
        acknowledge-mode: manual
        retry:
          enabled: true

--- #################### 服务保障相关配置 ####################

# Lock4j 配置项
lock4j:
  acquire-timeout: 3000 # 获取分布式锁超时时间，默认为 3000 毫秒
  expire: 30000 # 分布式锁的超时时间，默认为 30 毫秒

--- #################### 监控相关配置 ####################

# Actuator 监控端点的配置项
management:
  endpoints:
    web:
      base-path: /actuator # Actuator 提供的 API 接口的根目录。默认为 /actuator
      exposure:
        include: '*' # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 * ，可以开放所有端点。

# Spring Boot Admin 配置项
spring:
  boot:
    admin:
      # Spring Boot Admin Client 客户端的相关配置
      client:
        instance:
          service-host-type: IP # 注册实例时，优先使用 IP [IP, HOST_NAME, CANONICAL_HOST_NAME]

--- #################### 芋道相关配置 ####################

# 芋道配置项，设置当前项目所有自定义的配置
yudao:
  access-log: # 访问日志的配置项
    enable: false
  demo: false # 关闭演示模式



--- #################### 定时任务相关配置 ####################
xxl:
  job:
    admin:
      addresses: http://192.168.17.9:18080/xxl-job-admin
    accessToken: default_token # 执行器通讯TOKEN
    executor:
      appname: ${spring.application.name} # 执行器 AppName
      address:
      ip: 192.168.17.9
      port: 18080
      logpath: ${user.home}/logs/xxl-job/${spring.application.name} # 执行器运行日志文件存储磁盘路径
      logretentiondays: 30

welcome-msg:
  lxqr:
    red-packet-img: ${GuituAi.h5Domain}/static/redPullNews.png
    red-packet-link: ${GuituAi.h5Domain}/#/redOrCardPullNews?id={}&type={}&orderId={}
    coupon-img: ${GuituAi.h5Domain}/static/cardPullNews.png
    coupon-link: ${GuituAi.h5Domain}/#/cardPullNews?id={}&type={}
    description: 点击领取

task-msg:
  qi-rule:
    title: 会话质检
    desc: 你有一条【{}】的{}回话已超时未回复，请及时处理
    manage-desc: 有一条处于你督导规则下成员【{}】的{}会话已超时未回复
    url: ${GuituAi.h5Domain}/#/quality?id={}&type={}
    btnTxt: 去处理
    manage-btnTxt: 去查看
    weeklyUrl: ${GuituAi.h5Domain}/#/weekly?id={}

--- #################### AI营销相关配置 ####################
weixin:
  short:
    env-version: release

wecom:
  error-code-retry: -1,42001,42009,40082,40014
  serve:
    linkwe-wecom: linkwe-wecom
    linkwe-auth: linkwe-auth
    linkwe-file: linkwe-file
    linkwe-api: linkwe-api
  kf:
    end:
      msgmenu:
        content: "{\"head_content\":\"您好，本次会话服务已结束，请对我的服务质量进行评价? \",\"list\":[{\"type\":\"click\",\"click\":{\"id\":\"101\",\"content\":\"好评\"}},{\"type\":\"click\",\"click\":{\"id\":\"102\",\"content\":\"一般\"}},{\"type\":\"click\",\"click\":{\"id\":\"103\",\"content\":\"差评\"}},{\"type\":\"view\",\"view\":{\"url\":\"https://demo.GuituAi.net/mobile/#/evaluate?poolId={}\",\"content\":\"去写评价语\"}}]}"

# forest配置
forest:
  backend: okhttp3
  max-retry-count:  3 # 请求失败后重试次数，默认为0次不重试
  max-retry-interval: 5000 #重试间隔时间
  connect-timeout: 5000 #链接超时时间
  timeout: 5000  # 请求超时时间
  ## 日志总开关，打开/关闭Forest请求/响应日志（默认为 true）
  log-enabled: true
  ## 打开/关闭Forest请求日志（默认为 true）
  log-request: true
  ## 打开/关闭Forest响应状态日志（默认为 true）
  log-response-status: true
  ## 打开/关闭Forest响应内容日志（默认为 false）
  log-response-content: true
  variables:
    weComServerUrl: https://qyapi.weixin.qq.com/cgi-bin
    wxServerUrl: https://api.weixin.qq.com/sns
    wxCommonServerUrl: https://api.weixin.qq.com/cgi-bin
    wxAppletServerUrl: https://api.weixin.qq.com/wxa

# 项目相关配置
GuituAi:
  # 腾讯云存储
  file:
    #单个数据大小,单位MB
    maxFileSize: 50
    #总上传数据大小,单位MB
    maxRequestSize: 100
    #腾讯云对象存储
    object: tencentOss
    #AES加解密的Key， Key length 128/192/256 bits
    aesKey: qykj@20221101_te
    cos:
      secretId:
      secretKey:
      region:
      bucketName:
      cosImgUrlPrefix:
  weComeProxyConfig: # 微信相关的配置
    startProxy: false #是否开启代理 true开启 false不开启,如果为false,则proxyIp,proxyPort,proxyUserName,proxyPassword需要配置。
    proxyIp: "" #代理服务器的ip
    #代理服务器端口
    proxyPort: 0
    proxyUserName: "" #代理服务器账号
    proxyPassword: "" #代理服务器密码
  # 获取ip地址开关
  addressEnabled: false
  #扫码登陆url  这两个是平台自己的微信信息，后期根据情况改为在系统中配置
  wecomeLoginUrl: https://open.work.weixin.qq.com/wwopen/sso/qrConnect?appid=ww622fc852f79c3f13&agentid=1000080&redirect_uri=http%3A%2F%2Fdemo.GuituAi.net%2FauthRedirect&state=web_login
  customerServiceQrUrl: https://link-wechat-1251309172.cos.ap-nanjing.myqcloud.com/2022/10/21/957501f7-8517-4186-b6f4-3272ad1b8e33.png
  demoEnviron: false
  editPwd: true
  enableFilePreview: true
  baiduMapsAk: edGc5mIugVxx7lwUx9YpraKeWmExG64o #百度地图开发者ak
  authorizeUrl: https://open.weixin.qq.com/connect/oauth2/authorize #js sdk身份认证url，不变
  h5Domain: https://demo.GuituAi.net/mobile #移动端访问地址
  shortDomain: sl.GuituAi.net #短域名
  fissionUrl: ${GuituAi.h5Domain}/#/taskTreasure?id={0} #任务宝链接配置
  guideCodeUrl:  ${GuituAi.h5Domain}/#/guideCode #导购码
  guideGroupUrl: ${GuituAi.h5Domain}/#/storeCode #导购群码
  lostCustomerRedirectUrl: ${GuituAi.h5Domain}/#/lostCustomers #客户流失
  seasRedirectUrl: ${GuituAi.h5Domain}/#/highSeas #客户公海链接
  communityNewGroupUrl: ${GuituAi.h5Domain}/#/groupCode?type=newCustomerGroup&id={0}
  tagRedirectUrl: ${GuituAi.h5Domain}/#/groupCode?type=oldCustomerGroup&id={0} #老客标签建群H5链接
  customerSopRedirectUrl: ${GuituAi.h5Domain}/#/personalSOPDetails #客户SOP的H5跳转链接
  groupSopRedirectUrl: ${GuituAi.h5Domain}/#/customerBaseDetails #客群SOP的H5跳转链接
  liveUrl: ${GuituAi.h5Domain}/index-wx.html#/reminder?id={0} #直播页面
  shortLinkDomainName: ${GuituAi.shortDomain}/st/t/
  customerShortLinkDomainName: ${GuituAi.shortDomain}/st/l/
  shortAppletUrl: "pages/index/index"
  knowCustomerUrl: ${GuituAi.h5Domain}/index-wx.html#/identity?id={0} #识客码
  lxQrCodeUrl: ${GuituAi.h5Domain}/#/pullNews?id={}&type={} #红包/卡券拉新地址
  appMsgUrl: ${GuituAi.h5Domain}/#/shortLinkPush?id={} #短链推广-应用消息详情
  materialDetailUrl: ${GuituAi.h5Domain}/#/metrialDetail?materiaId={}&otherModle=true #素材详情
  momentsUrl: ${GuituAi.h5Domain}/#/friendsDetail?id={} #朋友圈移动端详情页
  leadsDetailUrl: /clueHighseas/detail?id={} #线索中心移动端-待办任务-线索长时间未跟进-详情页
  leadsCovenantWaitFollowUpUrl: /clueHighseas/followDetail?recordId={} #线索中心移动端-待办任务-线索约定事项待跟进-详情页
  fincaceProxyConfig:
    proxy: "" #使用代理的请求，需要传入代理的链接。如：socks5://10.0.0.1:8081 或者 http://10.0.0.1:8081
    paswd: "" #代理账号密码，需要传入代理的账号密码。如 user_name:passwd_123
  qrShortLinkDomainName: ${GuituAi.shortDomain}/st/pqr/
  qrGroupShortLinkDomainName: ${GuituAi.shortDomain}/st/gqr/
  keyWordGroupUrl: ${GuituAi.h5Domain}/#/keywords?id={0} #关键词群
  txAiSecretId: AKIDHo9GB4lKi3ILg0DF5thWGuNpIahlfS
  txAiSecretKey: sbHl9PaebzAByjMi5QZdVK21rW0Qh
  txAiRegion: ap-bei

--- #################### 微信支付配置 ####################
# 这里暂时配置，后期根据情况改为在系统中动态配置。目前使用到它的类 WechatPayConfig
# 没有正确的参数是不能启动成功的，代码部分暂时注释掉了
wx-pay:
  mch-id: dfdf3dfksdjfldjfdslf
  private-key-url: classpath:wechatpay/apiclient_key.pem
  mch-serial-no: sdf443434sd3434
  apiV3-Key: 3kljkdjf3343dsfik3j43dfdi



